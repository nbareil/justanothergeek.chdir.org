<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vulnerability on Just Another Geek</title>
    <link>https://justanothergeek.chdir.org/categories/vulnerability/</link>
    <description>Recent content in Vulnerability on Just Another Geek</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Aug 2010 14:09:00 +0000</lastBuildDate>
    
	<atom:link href="https://justanothergeek.chdir.org/categories/vulnerability/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What is really the attack surface of the kernel running a SECCOMP process?</title>
      <link>https://justanothergeek.chdir.org/2010/08/What-is-really-the-attack-surface-of-the-kernel-running-a-SECCOMP-process/</link>
      <pubDate>Wed, 25 Aug 2010 14:09:00 +0000</pubDate>
      
      <guid>https://justanothergeek.chdir.org/2010/08/What-is-really-the-attack-surface-of-the-kernel-running-a-SECCOMP-process/</guid>
      <description>In a previous post, I said the attack surface of the kernel for processes running SECCOMP was really low. To confirm this assumption, each vulnerability affecting the 2.6 kernel was reviewed.
Only those triggerable from a SECCOMPed process were kept. On 440 vulnerabilities, 13 were qualified:
Impact Description Architecture Reference
HIGH infinite loop triggering signal handler i386 CVE-2004-0554 MEDIUM audit_syscall_entry bypass amd64 CVE-2009-0834 MEDIUM SECCOMP bypass amd64 CVE-2009-0835 MEDIUM Non-sign extension of syscall arguments s390 CVE-2009-0029 MEDIUM EFLAGS leak on context switch amd64/i386 CVE-2006-5755 MEDIUM Nested faults amd64 CVE-2005-1767 MEDIUM Not handling properly certain privileged instructions s390 CVE-2004-0887 LOW Fix register leak in 32 bits syscall audititing amd64 81766741f LOW 64-bit kernel register leak to 32-bit processes amd64 24e35800c LOW Register leak amd64 CVE-2009-2910 LOW DoS by using malformed LDT amd64 CVE-2008-3247 LOW DoS on floating point exceptions powerpc HTX CVE-2007-3107 LOW DoS on 32-bit compatibility mode amd64 CVE-2005-1765</description>
    </item>
    
    <item>
      <title>CVE-2010-0740: Record of death vulnerability in OpenSSL</title>
      <link>https://justanothergeek.chdir.org/2010/03/CVE-2010-0740-Record-of-death-vulnerability-in-OpenSSL/</link>
      <pubDate>Thu, 25 Mar 2010 11:22:00 +0000</pubDate>
      
      <guid>https://justanothergeek.chdir.org/2010/03/CVE-2010-0740-Record-of-death-vulnerability-in-OpenSSL/</guid>
      <description>A new vulnerability (CVE-2010-0740) was found in OpenSSL, affectionately called &amp;ldquo;Record of death&amp;rdquo; (in reference to the ping of death vulnerability back in 1996) was fixed by the patch below:
--- ssl/s3_pkt.c 24 Jan 2010 13:52:38 -0000 1.57.2.9 +++ ssl/s3_pkt.c 24 Mar 2010 00:00:00 -0000 @@ -291,9 +291,9 @@ if (version != s-&amp;gt;version) { SSLerr(SSL_F_SSL3_GET_RECORD,SSL_R_WRONG_VERSION_NUMBER); - /* Send back error using their - * version number :-) */ - s-&amp;gt;version=version; + if ((s-&amp;gt;version &amp;amp; 0xFF00) == (version &amp;amp; 0xFF00)) + /* Send back error using their minor version number :-) */ + s-&amp;gt;version = (unsigned short)version; al=SSL_AD_PROTOCOL_VERSION; goto f_err; }  Arno and myself had a look on this vuln, but at a glance, it&amp;rsquo;s hard to understand the consequences of theses two modifications:</description>
    </item>
    
  </channel>
</rss>