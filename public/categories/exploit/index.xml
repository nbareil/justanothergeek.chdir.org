<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exploit on Just Another Geek</title>
    <link>https://justanothergeek.chdir.org/categories/exploit/</link>
    <description>Recent content in Exploit on Just Another Geek</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Mar 2010 11:22:00 +0000</lastBuildDate>
    
	<atom:link href="https://justanothergeek.chdir.org/categories/exploit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CVE-2010-0740: Record of death vulnerability in OpenSSL</title>
      <link>https://justanothergeek.chdir.org/2010/03/CVE-2010-0740-Record-of-death-vulnerability-in-OpenSSL/</link>
      <pubDate>Thu, 25 Mar 2010 11:22:00 +0000</pubDate>
      
      <guid>https://justanothergeek.chdir.org/2010/03/CVE-2010-0740-Record-of-death-vulnerability-in-OpenSSL/</guid>
      <description>A new vulnerability (CVE-2010-0740) was found in OpenSSL, affectionately called &amp;ldquo;Record of death&amp;rdquo; (in reference to the ping of death vulnerability back in 1996) was fixed by the patch below:
--- ssl/s3_pkt.c 24 Jan 2010 13:52:38 -0000 1.57.2.9 +++ ssl/s3_pkt.c 24 Mar 2010 00:00:00 -0000 @@ -291,9 +291,9 @@ if (version != s-&amp;gt;version) { SSLerr(SSL_F_SSL3_GET_RECORD,SSL_R_WRONG_VERSION_NUMBER); - /* Send back error using their - * version number :-) */ - s-&amp;gt;version=version; + if ((s-&amp;gt;version &amp;amp; 0xFF00) == (version &amp;amp; 0xFF00)) + /* Send back error using their minor version number :-) */ + s-&amp;gt;version = (unsigned short)version; al=SSL_AD_PROTOCOL_VERSION; goto f_err; }  Arno and myself had a look on this vuln, but at a glance, it&amp;rsquo;s hard to understand the consequences of theses two modifications:</description>
    </item>
    
    <item>
      <title>No more ASLR bypass on Linux 2.6.30</title>
      <link>https://justanothergeek.chdir.org/2010/02/No-more-ASLR-bypass-on-Linux-2.6.30/</link>
      <pubDate>Tue, 23 Feb 2010 12:26:00 +0000</pubDate>
      
      <guid>https://justanothergeek.chdir.org/2010/02/No-more-ASLR-bypass-on-Linux-2.6.30/</guid>
      <description>While trying to exploit a local setuid application, I had the unhappiness (as an attacker) to see that the security of the ASLR Linux kernel has increased, removing a whole method of exploitation. But let&amp;rsquo;s begin from the start:
The minimalist vulnerable example could be this vuln.c:
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; int main( int argc, char *argv[] ) { char buf[4]; printf(&amp;quot;%#p\n&amp;quot;, &amp;amp;buf); strcpy( buf, argv[1] ); return 0; }  Because of the Address Space Layout Randomization (ASLR), this bug is tough to exploit: if the binary is compiled with the right options and the kernel is configured to fully randomize the address space, it becomes impossible to guess where the buffer is, nor the location of the functions&amp;rsquo; libraries.</description>
    </item>
    
  </channel>
</rss>